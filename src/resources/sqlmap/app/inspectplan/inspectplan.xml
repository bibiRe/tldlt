<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 演示与教程手工映射SQL语句 -->
<sqlMap namespace="App.InspectPlan">
    <typeAlias alias="dto" type="org.g4studio.core.metatype.impl.BaseDto" />


    <select id="getPlanCount" parameterClass="dto" resultClass="java.lang.Integer">
    
        SELECT count(*)
        
        
        FROM InspectPlan a 
        
        where 1 = 1
        
        and a.applyuserid in (select userid from eauser b where b.deptid like '$deptid$%')
        
        <dynamic>
        

            <isNotEmpty prepend="AND" property="queryParam">
                ( 
                
                 a.applyuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                
                 OR
                 
                 a.approvuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                 
                 
                 OR
                 
                 a.executeuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                 
                 
                 )
            </isNotEmpty>
            
             <isNotEmpty prepend="AND" property="startdatetime">
                 
                  ( 
                 
                	  UNIX_TIMESTAMP(a.ExecuteStartTime) <![CDATA[>=]]> UNIX_TIMESTAMP(#startdatetime#)  
                 	
                 
                 )
                 
            </isNotEmpty>
            
            
            <isNotEmpty prepend="AND" property="enddatetime">
                 
                  ( 
                 
                 	    UNIX_TIMESTAMP(a.ExecuteEndTime) <![CDATA[<=]]> UNIX_TIMESTAMP(#enddatetime#)  
                 
                 )
                 
            </isNotEmpty>
            
        </dynamic>
        
    </select>
    
    
    
    <select id="getPlan" parameterClass="dto" resultClass="dto">
    
		 SELECT a.InspectPlan_Id as planid,
        
         a.Name as planname,  
         
         a.State as state,
         
         
         a.ApplyUserId as applyuserid,
        
        (SELECT username FROM eauser WHERE userid = a.ApplyUserId) as applyusername,
        
        date_format((a.ApplyTime),'%Y-%m-%d %H:%i:%s') as applytime,
        
       
        
        a.ExecuteUserId as executeuserid,
        
        (SELECT username FROM eauser WHERE userid = a.ExecuteUserId) as executeusername,
        
         date_format((a.ExecuteStartTime),'%Y-%m-%d %H:%i:%s') as executestartime,
        
         date_format((a.ExecuteEndTime),'%Y-%m-%d %H:%i:%s') as executeendtime ,
        
        
        
        a.ApprovUserId as approvuserid,
        
        (SELECT username FROM eauser WHERE userid = a.ApprovUserId) as approveusername,
        
        a.ApproveContent as approvecontent,
        
         date_format((a.ApproveTime),'%Y-%m-%d %H:%i:%s') as approvetime ,
         
         
        a.Remark as remark
        
        
        FROM InspectPlan a 
        
        where 1 = 1
        
        and a.applyuserid in (select userid from eauser b where b.deptid like '$deptid$%')
        
        <dynamic>
        

            <isNotEmpty prepend="AND" property="queryParam">
                ( 
                
                 a.applyuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                
                 OR
                 
                 a.approvuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                 
                 
                 OR
                 
                 a.executeuserid in (select userid from eauser c where c.username like '%$queryParam$%')
                 
                 
                 )
            </isNotEmpty>
            
             <isNotEmpty prepend="AND" property="startdatetime">
                 
                  ( 
                 
                	  UNIX_TIMESTAMP(a.ExecuteStartTime) <![CDATA[>=]]> UNIX_TIMESTAMP(#startdatetime#)  
                 	
                 
                 )
                 
            </isNotEmpty>
            
            
            <isNotEmpty prepend="AND" property="enddatetime">
                 
                  ( 
                 
                 	    UNIX_TIMESTAMP(a.ExecuteEndTime) <![CDATA[<=]]> UNIX_TIMESTAMP(#enddatetime#)  
                 
                 )
                 
            </isNotEmpty>
            
        </dynamic>
        
    </select>
    
    
    
           <select id="getUser" parameterClass="dto" resultClass="dto">

		SELECT a.USERID as id, a.USERNAME as value,a.Remark as remark
		
		from eauser a where 1 = 1 and a.USERTYPE != '3'
		
		and a.enabled = '1'
		
		and a.deptid like '$deptid$%'

        <dynamic>
            <isNotEmpty prepend="AND" property="queryParam">
                 a.USERNAME like '%$queryParam$%'
            </isNotEmpty>
        </dynamic>
    </select>
    
    <select id="getUserCount" parameterClass="dto" resultClass="java.lang.Integer">
        

        
        SELECT Count(*) from eauser a where 1 = 1 
        
        and a.USERTYPE != '3'
		
		and a.enabled = '1' 
		
		and a.deptid like '$deptid$%'
        
        <dynamic>
            <isNotEmpty prepend="AND" property="queryParam">
                 a.USERNAME like '%$queryParam$%'
            </isNotEmpty>
        </dynamic>
    </select>
    
    
    
     <insert id="AddPlan" parameterClass="dto">
        INSERT INTO InspectPlan
        (
       	  InspectPlan_Id,ApplyUserId,Name,ApplyTime,State,ExecuteUserId,ExecuteStartTime,ExecuteEndTime,Remark
        )
        VALUES (#id#,#loginuserid#,#planname#,now(),#state#,#executeuserid#,#executestartime#,#executeendtime#,#remark#)
    </insert>
    
    
    
    
        <select id="getDevice" parameterClass="dto" resultClass="dto">

		select  c.Name as devname, b.Name as regionname , d.Name as devmodelname ,
		
		e.Name as parentdevname ,e.Device_Id as parentdevid,
		
		c.Longtitude as longtitude, c.Latitude as latitude ,
		
		c.Height as height , c.RF_Id as rfid, c.Check_Cycle as checkcycleid,
		
		a.DEPTID as deptid, c.Device_Id as devid, b.Region_Id as regionid, 
		
		d.DeviceModel_Id as devmodelid ,c.Remark as remark
		
		from eadept a, region b  ,devicemodel d ,(device c left join device e on c.Parent_Device_Id = e.Device_Id)
		
		where a.DEPTID = b.DEPTID and b.Region_Id = c.Region_Id and c.DeviceModel_Id = d.DeviceModel_Id

        <dynamic>
    	     <isNotEmpty prepend="AND" property="deptid">
                 a.DEPTID like '$deptid$%'
            </isNotEmpty>
        </dynamic>
    </select>
    
    <select id="getDeviceCount" parameterClass="dto" resultClass="java.lang.Integer">
        

        
			select  count(*)
			
			from eadept a, region b  ,devicemodel d ,(device c left join device e on c.Parent_Device_Id = e.Device_Id)
			
			where a.DEPTID = b.DEPTID and b.Region_Id = c.Region_Id and c.DeviceModel_Id = d.DeviceModel_Id
        
        <dynamic>
    	     <isNotEmpty prepend="AND" property="deptid">
                 a.DEPTID like '$deptid$%'
            </isNotEmpty>
        </dynamic>
    </select>
    
    
     <select id="getDeviceByInspecDevice" parameterClass="dto" resultClass="dto">

		SELECT b.Device_Id as devid,b.InspectPlan_Id as planid
		
		
		from inspectplandevice b where 1 = 1
		
        <dynamic>
    	     <isNotEmpty prepend="AND" property="deptid">
                 b.InspectPlan_Id = #planid#
            </isNotEmpty>
        </dynamic>

    </select>
    
    
    
    <delete id="deleteDeviceByInspecPlan" parameterClass="dto" >
		 
		 DELETE FROM inspectplandevice WHERE 1 = 1
		      
		     <dynamic>
		
				 <isNotEmpty prepend="AND" property="id">
	                b.InspectPlan_Id = #planid#
	            </isNotEmpty>
            
        	</dynamic>
        	
	</delete>
	
	
    <insert id="AddDeviceForInspectPlan" parameterClass="dto">
        INSERT INTO inspectplandevice
        (
       	  InspectPlanDevice_Id,Device_Id,InspectPlan_Id
        )
        VALUES (#id#,#devid#,#planid#)
    </insert>
    

    <select id="queryPlanDevices00000" parameterClass="string" resultClass="dto">
        SELECT b.Device_ID as deviceID, b.parent_device_id as parentDeviceId,
        b.Check_Cycle as period, b.Longtitude, b.Latitude, b.Height,
        b.Region_Id as regionId,
        (SELECT Name FROM Region WHERE Region_Id = b.Region_Id) as regionName, b.Name
        as devicename,
        x.DeviceType_Id as deviceTypeId, x.Name as devicetype, y.DeviceModel_Id as
        deviceModelId, y.name as devicemodel
        FROM inspectplandevice a, Device b, devicetype x, devicemodel y WHERE
        a.Device_Id=b.Device_Id AND x.DeviceType_Id = y.devicetype_Id AND
        y.devicemodel_id = b.devicemodel_Id AND a.InspectPlan_Id = #planID#
    </select>
    
    <sql id="sqlQueryPlanBasic">
        SELECT a.InspectPlan_Id as planID, a.Name as planname,
        a.State, a.ExecuteUserId as executoruserid,
        (SELECT username FROM
        eauser WHERE userid = a.ExecuteUserId) as executor,
        UNIX_TIMESTAMP(a.ExecuteStartTime) as ExecuteStartTime,
        UNIX_TIMESTAMP(a.ExecuteEndTime) as ExecuteEndTime
        FROM InspectPlan a
    </sql>
    <sql id="sqlQueryExecuteUserPlanOutlineCondition">
        <dynamic prepend="WHERE">
            <isNotEmpty prepend="AND" property="userID">
                a.ExecuteUserId =
                #userID#
            </isNotEmpty>
        </dynamic>
    </sql>
    <select id="queryExecuteUserPlanOutline" parameterClass="map"
        resultClass="dto">
        <include refid="sqlQueryPlanBasic" />
        <include refid="sqlQueryExecuteUserPlanOutlineCondition" />
    </select>
    <sql id="sqlQueryPlanByIdCondition">
        WHERE a.InspectPlan_Id = #planID#
    </sql>
    <select id="queryPlanById" parameterClass="int" resultClass="dto">
        <include refid="sqlQueryPlanBasic" />
        <include refid="sqlQueryPlanByIdCondition" />
    </select>
    <sql id="sqlQueryPlanDeviceSelectInfo">
        SELECT a.InspectPlanDevice_Id as inpsectPlanDeviceID,
        a.Device_Id as
        deviceID, a.InspectPlan_Id as planID
    </sql>
    <sql id="sqlQueryPlanDevice">
        <include refid="sqlQueryPlanDeviceSelectInfo" />
        FROM inspectplandevice a WHERE 1=1
    </sql>
    <sql id="sqlQueryPlanDeviceByPlanIdAndDeviceIdCondition">
        <dynamic>
            <isNotEmpty prepend="AND" property="planID">
                a.InspectPlan_Id =
                #planID#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="deviceID">
                a.Device_Id =
                #deviceID#
            </isNotEmpty>
        </dynamic>
    </sql>
    <select id="queryPlanDeviceByPlanIdAndDeviceId" parameterClass="map"
        resultClass="dto">
        <include refid="sqlQueryPlanDevice" />
        <include refid="sqlQueryPlanDeviceByPlanIdAndDeviceIdCondition" />
    </select>
    <select id="queryPlanDeviceByDeviceIdAndStateCanInspectAndExecuteTimeFit"
        parameterClass="map" resultClass="dto">
        <include refid="sqlQueryPlanDeviceSelectInfo" />
        FROM inspectplandevice a, InspectPlan b
        WHERE a.InspectPlan_Id =
        b.InspectPlan_Id AND a.Device_Id = #deviceID#
        AND (b.State = 4 OR
        b.State = 5) AND ('$time$' >= b.ExecuteStartTime) AND
        <![CDATA[('$time$' <= b.ExecuteEndTime)]]>
    </select>

    <select id="queryPlanDevicesByPlanId" parameterClass="string"
        resultClass="dto">
        SELECT b.Device_ID as deviceID, b.parent_device_id as
        parentDeviceId, b.Check_Cycle as period, b.Longtitude, b.Latitude,
        b.Height, b.Region_Id as regionId,
        (SELECT Name FROM Region WHERE
        Region_Id = b.Region_Id) as regionName,
        b.Name as devicename,
        x.DeviceType_Id as deviceTypeId,
        x.Name as devicetype, y.DeviceModel_Id
        as deviceModelId, y.name as
        devicemodel
        FROM inspectplandevice a, Device
        b, devicetype x, devicemodel y
        WHERE
        a.Device_Id=b.Device_Id AND
        x.DeviceType_Id = y.devicetype_Id AND
        y.devicemodel_id =
        b.devicemodel_Id AND a.InspectPlan_Id = #planID#
    </select>
	<update id="updateInspectPlanFinished" parameterClass="dto">
		UPDATE InspectPlan SET State = #state# WHERE InspectPlan_Id = #planID#
    </update>    
    
</sqlMap>